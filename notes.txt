int main() {
    int a = 10;
    return 0;
}

compiles to:
x
__SP_H__ = 0x3e // I/O addresses for the CPU's stack pointer
__SP_L__ = 0x3d
__tmp_reg__ = 0 // register 0 is synonymous with the temporary register
main:
        push r28 // push copy of stack pointer to the stack
        push r29
        rcall . // shorthand for pushing two bytes to the stack; allocates space for [int a]
        in r28,__SP_L__ // load stack pointer into Y register (r28 and r29 pair)
        in r29,__SP_H__
        // r28 and r20 / Y register will point to the start of this function's stackframe
        ldi r24,lo8(10) // load 0x0010 into r24, r25 (r24=0x10 low, r25=0x00 high) 
        ldi r25,0
        std Y+2,r25 // store r24, r25 into the space created for [int a]
        std Y+1,r24
        ldi r24,0 // load 0x0000 into r24, r25
        ldi r25,0
        pop __tmp_reg__ // pop [int a] off the stack
        pop __tmp_reg__
        pop r29 // pop stack pointer from the stack
        pop r28
        ret // bye